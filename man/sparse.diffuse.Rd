% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tvilblindi_core.R
\name{sparse.diffuse}
\alias{sparse.diffuse}
\title{Generate diffusion matrix from graph Laplacian}
\usage{
sparse.diffuse(Asp, neigen = NULL, t = 0, maxdim = 50, method = "arpack")
}
\arguments{
\item{Asp}{generalised graph Laplacian matrix, as generated by \code{sparse.Laplacian.construct}.}

\item{neigen}{number of eigenvectors to be computed. Defaults to NULL, in which case the number of eigenvectors computed is determined by either \code{maxdim} + 1 (the first left eigenvector is disregarded,
since it represents stationary distribution of the Markov chain), or dimension of \code{Asp} (minimum of these values is taken). In simulation of the diffusion process, a value of \code{neigen} corresponding
to less than a 95-percent dropoff in eigenvalue versus maximum is taken.}

\item{t}{number of steps in the diffusion process. Defaults to 0. If t <= 0, use multi-scale geometry.}

\item{maxdim}{maximum dimension of diffusion coordinates.}

\item{method}{method employed for eigendecomposition. Currently supports \code{arpack} from package \code{igraph}, else default to \code{eigs_sym} from package \code{PRIMME}.}
}
\value{
\code{sparse.diffuse} returns a list containing the following elements.

\code{X} is a matrix of diffusion coordinates.

\code{phi0} is the left eigenvector representing stationary distribution of the diffusion process.

\code{eigenvals} is a vector containing eigenvalues of \code{Asp}, except for the first (largest) value, corresponding to \code{phi0}.

\code{psi} is a matrix of right eigenvectors (by rows).

\code{phi} is a matrix of left eigenvectors (by columns).

\code{neigen} is the \code{neigen} input parameter.

\code{eigenmult} are eigen-multipliers of the diffusion map.
}
\description{
\code{sparse.diffuse} computes a diffusion matrix of a Markov chain, given some generalised graph Laplacian, as generated by \code{sparse.Laplacian.construct}. Diffusion coordinates are extracted via
eigendecomposition of the Laplacian. Diffusion process is then simulated by raising the transition matrix to a power of \code{t} (this is to say, \code{t} 'steps'
in the diffusion process are simulated).
 Adapted from package \code{diffusionMap}.
}
