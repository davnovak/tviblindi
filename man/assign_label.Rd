% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_assign.R
\name{assign_label}
\alias{assign_label}
\title{Assign labels to unlabelled events}
\usage{
assign_label(A, labels, big = 1000, nb_it = 1500, eps = 1e-06)
}
\arguments{
\item{A}{transition matrix, as generated by \code{knn.spadj2sym}.}

\item{labels}{a numeric vector of labels. Length of \code{labels} is equal to the dimension of \code{A}.}

\item{big}{maximum number of non-origin vertices for exact solution of linear system. Defaults to \code{1000}.}

\item{nb_it}{maximum number of iterations for conjugate gradient or biconjugate gradient stabilised method. Defaults to \code{1500}.}

\item{eps}{error tolerance for conjugate gradient or biconjugate gradient stabilised method. Defaults to \code{1E-6}.}
}
\value{
\code{assign_label} returns a list containing the following elements.

\code{class} is a vector of vertex labels.

\code{res} is a matrix generated via concatenation of column vectors which are solutions of
 N system of linear equations. Here, N is the number of unique labels. Each row corresponds to an unlabelled vertex and each column corresponds to a unique vertex label. Entries of the matrix are calculated via the
 propagation of labels in a diffusion process. The higher the value, the higher the likelihood that the given label is assigned to the given unlabelled vertex in this process. Indeed, the \code{class} vector of labels
 is generated by finding the column of maximum value of entry per row.

 \code{error} values are relevant to numerical solution; error values are given for each of the N systems solved and stored in a vector. If solution
 is exact, \code{error} is an atomic \code{-1}.

 \code{iteration} is relevant to numerical solution; it is a vector containing numbers of iterations needed for solution of each system. If solution is exact, \code{iteration}
 is an atomic \code{-1}.
}
\description{
\code{assign_label} takes a transition matrix of a graph and a vector of labels (eg. cluster memberships) for each vertex in the graph. The function replaces labels \code{0} (which represents an unlabelled vertex)
with non-zero values found in the vector of labels. Label values are propagated via transitioning from labelled to unlabelled events, in accordance to transition probabilities
specified by the transition matrix. For instance, if labels are cluster memberships and some vertices do not belong in any cluster (label is \code{0}), clusters are 'grown' to include all vertices.
}
\details{
The function involves solving as many systems of linear equations as there are unique label values.
 If dimension of transition matrix without labelled vertices exceeds a set threshold \code{big}, we solve the system numerically via conjugate gradient
 method for symmetric matrix or biconjugate gradient stabilised method for non-symmetric matrix.
 If we solve numerically, we set a maximum number of iterations (\code{nb_it}). Moreover, for numerical solutions error tolerance can be set manually (\code{eps}).

Final label assigned to a vertex is determined by majority vote: the label which gets propagated most often, according to a diffusion process following the input transition matrix,
 is assigned to the given vertex.
}
