% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tviblindi_S3.R
\name{Walks.tviblindi}
\alias{Walks.tviblindi}
\title{Simulates random walks in directed graph, modifies x}
\usage{
\method{Walks}{tviblindi}(
  x,
  N = 1000,
  breaks = 100,
  base = 1.5,
  K = 30,
  equinumerous = FALSE,
  to = NULL,
  add = FALSE,
  kernel = "exp"
)
}
\arguments{
\item{x}{tviblindi class object.}

\item{N}{integer (default 1000); number of walks to simulate (see details).}

\item{breaks}{integer (default 100); number of bins with respect to pseudotime (see details).}

\item{base}{double (default 1.5); penalty of jumping to far ahead in presudotime.}

\item{K}{integer (default 30); number of nearest neighbors to computer transition matrix.}

\item{equinumerous}{bool (default FALSE); simulate equal number (\code{N} for each) of walks for every potential end (see details).}

\item{to}{integer vector; indices of cells - force choice of ends (see details).}

\item{add}{bool (default FALSE); add the simulated walks to \code{x} instead of replace.}

\item{kernel}{character; see \code{knn.adj2spadjsim}.}
}
\value{
returns an invisible tviblindi class object.
}
\description{
\code{Walks}
}
\details{
This method simulates random walks on directed graph (only edges pointing ahead in pseudotime are kept). To avoid short circuits
the pseudotime (the cells with respect to pseudotime) is divided into \code{breaks} bins and the probability of jump over k-bins ahead is penalized
by \code{base}^-k. Transition matrix is constructed independent of pseudotime estimation using \code{K} nearest neighbors.
If \code{equinumerous==TRUE} the potential ends (vertices in graph with no out-going edge) are identified and for each a subcomponent 
of graph of vertices from which this end could be reached is used for simulation - this could be expensove for large number of ends. 
The same approach is used when \code{!is.null(to)}.
}
